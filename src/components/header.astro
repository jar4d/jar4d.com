---
import { Icon } from "astro-icon";
import ThemeSwitcher from "~/components/theme-switcher.astro";
import type { NavItem } from "~/types";

const navItems: Array<NavItem> = [
  { title: "About", url: "#intro" },
  { title: "Experience", url: "#experience" },
  { title: "Skills", url: "#skills" },
  { title: "Projects", url: "#projects" }
];
---

<header class="fixed top-0 left-0 z-50 w-full backdrop-blur-sm">
  <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
    <div class="flex h-16 items-center justify-between">
      <div class="flex-shrink-0">
        <a href="/" class="font-heavy text-xl">Jared Ruddy</a>
      </div>
      <nav class="hidden md:block">
        <ul class="flex space-x-8">
          {navItems.map(({ title, url }) => (
            <li>
              <a 
                href={url}
                class="font-light hover:text-primary transition-colors"
              >
                {title}
              </a>
            </li>
          ))}
        </ul>
      </nav>
      <div class="flex items-center gap-4">
        <ThemeSwitcher />
        <button 
          type="button"
          class="md:hidden"
          aria-label="Toggle menu"
        >
          <Icon name="mdi:menu" class="h-6 w-6" />
        </button>
      </div>
    </div>
  </div>
</header>

<script>
  import MicroModal from "micromodal";
  import invariant from "tiny-invariant";

  const menuModalId = "menu-modal";

  const header = document.querySelector("#page-header") as HTMLElement;
  const page = document.documentElement;
  const menu = document.querySelector(`#${menuModalId} ul`);
  const openNavButton = document.querySelector("#open-nav-button");
  const closeNavButton = document.querySelector("#close-nav-button");

  invariant(header, "header should not be null");
  invariant(menu, "menu should not be null");
  invariant(openNavButton, "openNavButton should not be null");
  invariant(closeNavButton, "closeNavButton should not be null");

  const openMenu = () => {
    MicroModal.show(menuModalId, { disableScroll: true });
  };

  const closeMenu = () => {
    MicroModal.close(menuModalId);
  };

  openNavButton.addEventListener("click", openMenu);
  closeNavButton.addEventListener("click", closeMenu);

  document.addEventListener("scroll", () => {
    const d = page.clientHeight - page.scrollTop - header.offsetHeight;
    header.classList.toggle("fixed-header", d < 0);
  });

  menu.addEventListener("click", (event) => {
    if ((event.target as HTMLElement).tagName === "A") {
      closeMenu();
    }
  });
</script>

<noscript>
  <style>
    #open-nav-button {
      display: none;
    }
  </style>
</noscript>

<style>
  .fixed-header {
    @apply fixed bottom-auto top-0;
    @apply border-default bg-default text-default;
  }
  .modal.is-open {
    @apply block;
  }
</style>
